{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./Server/app.js","webpack:///external \"express\"","webpack:///external \"path\"","webpack:///external \"body-parser\"","webpack:///./Server/InitModule.js","webpack:///external \"mongodb\"","webpack:///./Server/config.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","express","app","path","router","Router","bodyParser","initObject","dbObject","CSV_COLLECTION","use","urlencoded","extended","json","static","join","__dirname","req","res","next","header","getMongoDB","then","dbo","collection","console","log","catch","e","sendFile","post","async","pageNo","body","pageSize","sortCriteria","filterQuery","filter","keys","length","getFilterQuery","sortQuery","column","query","order","getSortQuery","rows","find","sort","skip","limit","toArray","count","row","_id","date","Date","dob","toISOString","split","status","send","data","total","error","message","columnDefinitions","columns","map","dataType","Number","findOne","drop","insertMany","result","ok","isDone","listen","require","mongo","Config","MongoClient","Promise","resolve","reject","connect","mongoConfig","URI","err","db","DB_NAME"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const express = require('express')\nconst app = express();\nconst PORT = 3004;\nconst path = require('path');\nconst router = express.Router();\nconst bodyParser = require(\"body-parser\");\nconst InitModule = require('./InitModule');\nconst initObject = new InitModule();\n\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(bodyParser.json());\napp.use(express.static(path.join(__dirname,\"../build\")));\n\napp.use(function (req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n  next();\n});\n\nlet dbObject, CSV_COLLECTION;\ninitObject.getMongoDB()\n  .then(dbo => {\n    dbObject = dbo;\n    CSV_COLLECTION = dbObject.collection(\"csv\");\n    console.log('MOngodb connected')\n  })\n  .catch(e => {\n    console.log(\"Mongo Connection Failed\", e);\n  });\n\nrouter.get(\"/\",(req,res) => {\n  res.sendFile(path.join(__dirname, '..' , 'build', 'index.html'));\n})\n//api getDbUsers\nfunction getFilterQuery(filter){\n  if(Object.keys(filter).length > 0){\n    return filter;\n  } else {\n    return {};\n  }\n}\nfunction getSortQuery(sortCriteria){\n  if(sortCriteria.column){\n    let query = {};\n    query[sortCriteria.column] = sortCriteria.order === \"ascending\" ? 1 : -1;\n    return query;\n  } else {\n    return {};\n  }\n}\nrouter.post('/getRows',async(req,res)=>{\n  try {\n    let pageNo = req.body.pageNo,\n    pageSize = req.body.pageSize,\n    sortCriteria = req.body.sortCriteria,\n    filter = req.body.filter;\n    let filterQuery = getFilterQuery(filter), sortQuery = getSortQuery(sortCriteria);\n    let rows = await CSV_COLLECTION.find(filterQuery).sort(sortQuery).skip((pageNo -1) * pageSize).limit(pageSize).toArray();\n    let count = await CSV_COLLECTION.find().count();\n    for(let i=0;i<rows.length;i++){\n      let row = rows[i];\n      delete row._id;\n      let date = new Date(row.dob);\n      row.dob = date.toISOString().split('T')[0];\n      rows[i] = row;\n    }\n    res.status(200).send({\n      data: rows,\n      total: count\n    });\n  } catch (error) {\n    res.status(500).send({error: error.message})\n  }\n})\n\nrouter.post('/setRows', async(req,res) => {\n  try {\n    let data = req.body.data, columnDefinitions = req.body.columns;\n    data = data.map(row => {\n      for(let column of columnDefinitions){\n        if(column.dataType === \"date\"){\n          row[column.name] = new Date(row[column.name]);\n        } else if(column.dataType === \"number\"){\n          row[column.name] = Number(row[column.name]);\n        }\n      }\n      return row;\n    })\n    let test = await CSV_COLLECTION.findOne();\n    if(test){\n      await CSV_COLLECTION.drop();\n    }\n    let insertResponse = await CSV_COLLECTION.insertMany(data);\n    if(insertResponse.result.ok === 1){\n      res.status(200).send();\n    } else {\n      throw {message: \"Could not save data\"}\n    }\n  } catch (error) {\n    res.status(500).send({error: error.message});\n  }\n})\n\nrouter.post('/reset', async(req,res) => {\n  try {\n    let isDone = false;\n    let test = await CSV_COLLECTION.findOne();\n    if(test){\n      let resetResponse = await CSV_COLLECTION.drop();\n      isDone = resetResponse;\n    } else {\n      isDone = true;\n    }\n    if(isDone){\n      res.status(200).send();\n    } else {\n      throw {message: \"Could not reset data\"}\n    }\n  } catch (error) {\n    res.status(500).send({error: error.message});\n  }\n})\n\napp.use('/', router);\napp.listen(PORT, () => console.log(`Listening on ${PORT}`))\n\nconsole.log(`Running at Port ${PORT}`);\n","module.exports = require(\"express\");","module.exports = require(\"path\");","module.exports = require(\"body-parser\");","var mongo = require('mongodb');\nvar Config = require('./config');\nvar MongoClient = mongo.MongoClient;\n\nclass InitModule {\n\n    constructor() {\n    }\n\n    getMongoDB() {\n        try {\n            return new Promise((resolve, reject) => {\n                MongoClient.connect(Config.mongoConfig.URI, function (err, db) {\n                    if (err) {\n                        reject(err);\n                    }\n                    var dbo = db.db(Config.mongoConfig.DB_NAME);\n                    resolve(dbo);\n                })\n            });\n        }\n        catch (e) {\n            console.log(e);\n        }\n\n    }\n}\nexports = module.exports = InitModule;","module.exports = require(\"mongodb\");","const Config = {\n  mongoConfig: {\n    DB_NAME: \"csvUploader\",\n    URI: \"mongodb://localhost:27017/\"\n  }\n}\nexports = module.exports = Config;"],"sourceRoot":""}